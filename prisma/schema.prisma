// prisma/schema.prisma

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  // Custom fields
  role          String      @default("user") // e.g., user, admin, editor
  bio           String?
  lastLogin     DateTime?
  settings      Json?
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

// --------------------------------------------------
// BCM-specific models
// --------------------------------------------------

model Subscription {
  id            String   @id @default(cuid())
  userId        String   @unique
  stripeId      String   @unique
  plan          String
  status        String   // e.g., active, canceled, past_due
  startedAt     DateTime
  endedAt       DateTime?
  trialEndsAt   DateTime?

  @@index([userId])
}

model Report {
  id            String   @id @default(cuid())
  userId        String
  title         String
  summary       String?
  content       Json
  version       Int      @default(1)
  tags          String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([userId])
}

model AIRun {
  id            String   @id @default(cuid())
  userId        String
  title         String
  prompt        String
  result        Json?
  status        String   // queued, running, completed, failed
  error         String?
  durationMs    Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([userId])
}
