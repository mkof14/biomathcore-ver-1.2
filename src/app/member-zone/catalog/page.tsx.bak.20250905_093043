"use client"
import ClearSelections from "@/components/catalog/ClearSelections";
"use client";

import useSWR from "swr";
import Link from "next/link";
import ClearAllButton from "@/components/catalog/ClearAllButton";
import { useState } from "react";

type Service = {
  id: string;
  slug: string;
  title: string;
  description?: string | null;
  category?: string | null;
  visibility: "PUBLIC" | "LOGGED_IN" | "PLAN_GATED";
  requiredPlans: string;
};

type Resp = {
  items: Record<string, Service[]>;
  selections: string[];
};

const fetcher = (url: string) => fetch(url).then((r) => r.json());

function PlanBadge({ visibility, requiredPlans }: { visibility: string; requiredPlans: string }) {
  if (visibility === "PUBLIC") return <span className="text-xs rounded-full px-2 py-0.5 bg-green-50 text-green-700 border border-green-200">Public</span>;
  if (visibility === "LOGGED_IN") return <span className="text-xs rounded-full px-2 py-0.5 bg-blue-50 text-blue-700 border border-blue-200">Members</span>;
  return <span className="text-xs rounded-full px-2 py-0.5 bg-amber-50 text-amber-700 border border-amber-200">Plan: {requiredPlans || "any"}</span>;
}

export default function CatalogPage() {
  const { data, error, isLoading, mutate } = useSWR<Resp>("/api/catalog", fetcher, { refreshInterval: 0 });
  const [busy, setBusy] = useState<string | null>(null);

  if (error) return <div className="max-w-5xl mx-auto px-4 py-10">Failed to load</div>;
  if (isLoading || !data) return <div className="max-w-5xl mx-auto px-4 py-10">Loading…</div>;

  const selections = new Set(data.selections);

  async function toggle(serviceId: string, next: boolean) {
    setBusy(serviceId);
    try {
      const res = await fetch("/api/user/services", {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ serviceId, selected: next }),
      });
      if (res.ok) {
        await mutate();
      }
    } finally {
      setBusy(null);
    }
  }

  return (
    <div className="max-w-6xl mx-auto px-4 py-8 space-y-8">
      <div className="flex items-end justify-between">
        <div>
          <h1 className="text-2xl font-semibold">Catalog</h1>
<ClearAllButton />
          <p className="text-sm text-gray-600 dark:text-gray-400 mt-1">Choose the categories and services you want to use.</p>
        </div>
        <Link href="/member-zone" className="rounded-2xl border px-4 py-2 hover:bg-gray-50 dark:hover:bg-neutral-900">Back</Link>
      </div>

      {Object.keys(data.items).length === 0 ? (
        <p className="text-gray-600 dark:text-gray-400">No services available.</p>
      ) : (
        Object.entries(data.items).map(([cat, list]) => (
          <section key={cat} className="space-y-3">
            <h2 className="text-lg font-medium">{cat}</h2>
            <div className="grid md:grid-cols-2 gap-4">
              {list.map((s) => {
                const selected = selections.has(s.id);
                return (
                  <div
                    key={s.id}
                    className="rounded-2xl border bg-white/70 dark:bg-white/5 backdrop-blur p-4 hover:shadow-sm transition"
                  >
                    <div className="flex items-start justify-between gap-3">
                      <div>
                        <div className="flex items-center gap-2">
                          <h3 className="font-semibold">{s.title}</h3>
                          <PlanBadge visibility={s.visibility} requiredPlans={s.requiredPlans} />
                        </div>
                        {s.description ? (
                          <p className="text-sm text-gray-600 dark:text-gray-400 mt-2 line-clamp-3">{s.description}</p>
                        ) : null}
                      </div>
                      <button
                        disabled={busy === s.id}
                        onClick={() => toggle(s.id, !selected)}
                        className={`px-3 py-1.5 rounded-full text-sm border ${selected ? "bg-black text-white" : "bg-white text-black"}`}
                      >
                        {busy === s.id ? "Saving…" : selected ? "Selected" : "Select"}
                      </button>
                    </div>
                  </div>
                );
              })}
            </div>
          </section>
        ))
      )}
    </div>
  );
}
